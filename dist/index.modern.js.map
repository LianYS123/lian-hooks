{"version":3,"file":"index.modern.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/hooks/useMutation.ts","../src/hooks/useUpdateEffect.ts","../src/hooks/useRequest.ts","../src/hooks/useTable.ts","../src/hooks/useTimer.ts","../src/hooks/usePolling.ts","../src/hooks/utils/dom.ts","../src/hooks/useDomHooks.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { useState, useRef } from 'react';\n\n/**\n * @description: 异步方法的简单封装，处理请求的loading状态\n * @param {function} method 异步方法\n * @return {array} 异步方法和转\n */\nexport const useMutation = (\n  method: (...params: any[]) => Promise<any>,\n  initialData?: any,\n): [\n  (...params: any) => void,\n  {\n    loading: boolean;\n    error: Error | undefined;\n    data: any;\n  },\n] => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | undefined>();\n  const [data, setData] = useState(initialData);\n  const methodRef = useRef(method);\n  methodRef.current = method;\n\n  const loadData = async (...params: any[]) => {\n    try {\n      setLoading(true);\n      const res = await methodRef.current(...params);\n      setLoading(false);\n      setData(res);\n    } catch (e) {\n      setLoading(false);\n      setError(e);\n      // eslint-disable-next-line no-console\n      console.error(e);\n    }\n  };\n\n  return [loadData, { loading, error, data }];\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * @description: 组件更新时执行的事件\n * @param {*} fn  要执行的函数\n * @param {*} deps  依赖项\n */\nexport const useUpdateEffect: typeof useEffect = (fn, deps) => {\n  const isMouted = useRef(false); \n  useEffect(() => {\n    if (isMouted.current) {\n      return fn();\n    } else {\n        isMouted.current = true;\n    }\n  }, deps);\n};\n","import { useEffect, useRef } from 'react';\nimport { useMutation } from './useMutation';\nimport { useUpdateEffect } from './useUpdateEffect';\nimport debounce from 'lodash.debounce';\n\nexport interface UseRequestParamsType {\n  [key: string]: any;\n  method(params?: any, ...restArgs: any[]): Promise<any>;\n  defaultParams?: any;\n  necessaryParams?: any;\n  autoLoad?: boolean;\n}\n\n/**\n * @description: 请求方法的简单封装，处理请求的loading状态\n * @param {*} defaultParams 默认参数\n * @param {*} necessaryParams 必要参数\n * @param {*} rest 请求方法额外参数, onError事件等options可以通过这个参数传递\n */\nexport const useRequest = ({\n  method,\n  defaultParams = {},\n  necessaryParams,\n  autoLoad = true,\n  ...rest\n}: UseRequestParamsType) => {\n  const [_method, requestState] = useMutation(method);\n  const paramRef = useRef(defaultParams);\n  const necessaryParamsRef = useRef(necessaryParams);\n  necessaryParamsRef.current = necessaryParams;\n\n  const loadData = (_params = paramRef.current) => {\n    paramRef.current = _params;\n    if (!requestState.loading) {\n      const realParams = { ...necessaryParamsRef.current, ..._params }; //每次请求都带上necessaryParams\n      debounce(_method, 100)(realParams, rest);\n    }\n  };\n\n  const reload = () => {\n    loadData();\n  };\n\n  useUpdateEffect(() => {\n    if (autoLoad) {\n      loadData();\n    }\n  }, [JSON.stringify(necessaryParams)]);\n\n  useEffect(() => {\n    if (autoLoad) {\n      loadData();\n    }\n  }, []);\n\n  return { search: loadData, reload, ...requestState };\n};\n","import { useState } from 'react';\nimport { UseRequestParamsType, useRequest } from './useRequest';\n\nexport interface UseTableParamsType extends UseRequestParamsType {\n  defaultPageSize?: number;\n  formatter?(\n    data: any,\n  ): {\n    total: number;\n    dataSource: any[];\n  };\n}\n\ninterface PageParamsType {\n  current: number;\n  pageSize: number;\n}\n\nconst defaultFormatter = (data: { content?: any } = {}) => {\n  const { total_records = 0, records = [] } = data.content || {};\n  return { total: total_records, dataSource: records };\n};\n\n/**\n * @description: 封装方便antd table使用的hooks\n * @param defaultPageSize 默认分页大小, 不传默认为10\n * @param defaultParams 默认请求参数\n * @param necessaryParams 必要请求参数\n * @param method 请求方法\n * @param formatter 请求结果数据转换函数\n */\nconst useTable = (options: UseTableParamsType) => {\n  const {\n    method,\n    defaultPageSize = 10,\n    necessaryParams = {},\n    formatter = defaultFormatter,\n    ...rest\n  } = options;\n  const [\n    { current = 1, pageSize = defaultPageSize },\n    onChangePaination,\n  ] = useState<PageParamsType>({ current: 1, pageSize: defaultPageSize });\n\n  const realParams = {\n    ...necessaryParams,\n    page: current,\n    page_size: pageSize,\n  };\n\n  const { data, loading, search, reload } = useRequest({\n    method,\n    necessaryParams: realParams,\n    ...rest\n  });\n\n  const { total, dataSource } = formatter(data);\n\n  const onChange = (current: number, pageSize: number) => {\n    let toCurrent = current <= 0 ? 1 : current;\n    const toPageSize = pageSize <= 0 ? 1 : pageSize;\n    const tempTotalPage = Math.ceil(total / toPageSize);\n\n    if (tempTotalPage && toCurrent > tempTotalPage) {\n      toCurrent = tempTotalPage;\n    }\n\n    onChangePaination({\n      current: toCurrent,\n      pageSize: toPageSize,\n    });\n  };\n\n  const pagination = {\n    current,\n    pageSize,\n    total,\n    onChange: onChange,\n    onShowSizeChange: onChange,\n  };\n\n  return {\n    loading,\n    data,\n    reload,\n    search,\n    pagination,\n    tableProps: {\n      dataSource,\n      loading,\n      pagination,\n    },\n  };\n};\n\nexport { useTable };\n","import { useEffect, useState, DependencyList, useRef } from 'react';\n\n/**\n * @description: setInterval的hooks实现\n * @param {function} func 要执行的函数\n * @param {number} interval 执行间隔\n * @param {DependencyList} deps 依赖项\n * @return {*} clearInterval\n */\nexport const useInterval = (func: () => void, interval: number, deps: DependencyList = []) => {\n  const [ timer, setTimer ] = useState();\n  const funcRef = useRef<() => void>(func);\n  funcRef.current = func; //每次进入hooks保存最新的执行函数\n  const clear = () => clearInterval(timer);\n  useEffect(() => {\n    const I = setInterval(() => {\n      funcRef.current();\n    }, interval);\n    setTimer(I as any);\n    return () => clearInterval(I);\n  }, deps);\n  return clear;\n};\n\n/**\n * @description: setTimeout的hooks实现\n * @param {function} func 要执行的函数\n * @param {number} interval 执行间隔\n * @param {DependencyList} deps 依赖项\n * @return {*} clearTimeout\n */\nexport const useTimeout = (func: () => void, timeout: number, deps: DependencyList = []) => {\n  const [ timer, setTimer ] = useState();\n  const funcRef = useRef<() => void>(func);\n  funcRef.current = func; //每次进入hooks保存最新的执行函数\n  const clear = () => clearTimeout(timer);\n  useEffect(() => {\n    const T = setTimeout(funcRef.current, timeout);\n    setTimer(T as any);\n    return () => clearTimeout(T);\n  }, deps);\n  return clear;\n};","import { useState } from 'react';\nimport { useInterval } from './useTimer';\nimport { useMutation } from './useMutation';\n\nexport interface UsePollingParamType {\n  method(...params: any[]): Promise<any>;\n  onReceive?(data?: any): boolean;\n  interval?: number;\n  errorRetryCount?: number;\n  autoStart?: boolean;\n}\n\n/**\n * @description: 处理轮询状态的hooks\n * @param method 请求方法\n * @param onReceive 当接收到数据时调用的函数, 返回true不再继续请求\n * @param interval 请求间隔\n * @param errorRetryCount 发生错误后继续请求次数\n * @param autoStart 是否自动触发\n * @return 轮询状态和操作函数\n */\nexport const usePolling = ({\n  method,\n  onReceive,\n  interval = 1000,\n  errorRetryCount = 0,\n  autoStart = false,\n}: UsePollingParamType) => {\n  const [request, { loading, error, data }] = useMutation(method);\n  const [polling, setPolling] = useState(autoStart);\n  const [retryCount, setRetryCount] = useState(errorRetryCount);\n\n  const start = () => {\n    if (polling === false) {\n      setPolling(true);\n      request();\n    }\n  };\n\n  const onError = () => {\n    if (retryCount) {\n      setRetryCount((count) => count - 1);\n      request()\n    } else {\n      cancel();\n    }\n  };\n\n  const onSuccess = () => {\n    if (onReceive && onReceive(data) === true) {\n      cancel();\n    } else {\n      request()\n      start();\n    }\n  };\n\n  const clear = useInterval(\n    () => {\n      if (polling) {\n        if (error) {\n          onError();\n        } else {\n          onSuccess();\n        }\n      }\n    },\n    interval,\n    [data, error, polling],\n  );\n\n  const cancel = () => {\n    clear();\n    setPolling(false);\n  };\n  return {\n    start,\n    cancel,\n    loading,\n    data,\n    polling,\n  };\n};\n","import { MutableRefObject } from 'react';\n\nexport type BasicTarget<T = HTMLElement> =\n  | (() => T | null)\n  | T\n  | null\n  | MutableRefObject<T | null | undefined>;\n\nexport type TargetElement = HTMLElement | Element | Document | Window;\n\nexport function getTargetElement(\n  target?: BasicTarget<TargetElement>,\n  defaultElement?: TargetElement,\n): TargetElement | undefined | null {\n  if (!target) {\n    return defaultElement;\n  }\n\n  let targetElement: TargetElement | undefined | null;\n\n  if (typeof target === 'function') {\n    targetElement = target();\n  } else if ('current' in target) {\n    targetElement = target.current;\n  } else {\n    targetElement = target;\n  }\n\n  return targetElement;\n}\n","import { useState, useEffect, MutableRefObject, useRef } from 'react';\nimport { BasicTarget, TargetElement, getTargetElement } from './utils/dom';\n\n/**\n * @description: 在hooks中使用事件监听器\n * @param {*} target  dom对象或其ref引用\n * @param {*} eventName 事件名称\n * @param {*} listener  事件监听器\n */\nexport const useEventListener = (\n  target: BasicTarget<TargetElement>,\n  eventName: string,\n  listener: EventListenerOrEventListenerObject,\n) => {\n  const listenerRef = useRef(listener);\n  listenerRef.current = listener;\n  const targetElement = getTargetElement(target, window);\n  useEffect(() => {\n    if(!targetElement?.addEventListener) {\n      return;\n    }\n    targetElement.addEventListener(eventName, listenerRef.current);\n    return targetElement.removeEventListener.bind(targetElement, listenerRef.current);\n  }, [eventName]);\n};\n\n\n/**\n * @description: 监听元素大小变化\n * @param {MutableRefObject} ref 元素ref引用\n * @return {*} {width, height}\n */\nexport const useSize = (ref: MutableRefObject<TargetElement>) => {\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0,\n  });\n  const _setSize = () => {\n    setSize({\n      width: ref.current ? (ref.current as HTMLElement).clientWidth : 0,\n      height: ref.current ? (ref.current as HTMLElement).clientHeight : 0,\n    });\n  };\n  useEventListener(window, 'resize', _setSize);\n  useEffect(() => {\n    _setSize();\n  }, []);\n  return size;\n};\n"],"names":["useMutation","method","initialData","useState","loading","setLoading","error","setError","data","setData","methodRef","useRef","current","loadData","params","res","e","console","useUpdateEffect","fn","deps","isMouted","useEffect","useRequest","defaultParams","necessaryParams","autoLoad","rest","_method","requestState","paramRef","necessaryParamsRef","_params","realParams","debounce","reload","JSON","stringify","search","defaultFormatter","content","total_records","records","total","dataSource","useTable","options","defaultPageSize","formatter","pageSize","onChangePaination","page","page_size","onChange","toCurrent","toPageSize","tempTotalPage","Math","ceil","pagination","onShowSizeChange","tableProps","useInterval","func","interval","timer","setTimer","funcRef","clear","clearInterval","I","setInterval","useTimeout","timeout","clearTimeout","T","setTimeout","usePolling","onReceive","errorRetryCount","autoStart","request","polling","setPolling","retryCount","setRetryCount","start","onError","count","cancel","onSuccess","getTargetElement","target","defaultElement","targetElement","useEventListener","eventName","listener","listenerRef","window","addEventListener","removeEventListener","bind","useSize","ref","width","height","size","setSize","_setSize","clientWidth","clientHeight"],"mappings":"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"}